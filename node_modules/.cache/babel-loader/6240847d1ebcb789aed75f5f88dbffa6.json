{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\Training-2021\\\\react_js\\\\todo\\\\src\\\\components\\\\Form.jsx\";\nimport React, { useEffect } from \"react\";\nimport { v4 as uuidV4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  input,\n  setInput,\n  todos,\n  setTodos,\n  editTodos,\n  setEditTodos\n}) => {\n  const onInputChange = event => {\n    setInput(event.target.value);\n  };\n\n  const updateTodo = (title, id, completed) => {\n    const newTodo = todos.map(todo => todo.id === id ? {\n      title,\n      id,\n      completed\n    } : todo);\n    setTodos(newTodo);\n    setEditTodos(\"\");\n  };\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n\n    if (!editTodos) {\n      setTodos([...todos, {\n        id: uuidV4(),\n        title: input,\n        completed: false\n      }]);\n      setInput(\"\");\n    } else {\n      updateTodo(input, editTodos.id, editTodos.completed);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onFormSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"task-input\",\n      placeholder: \"Enter a ToDo....\",\n      value: input,\n      required: true,\n      onChange: onInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-add\",\n      type: \"submit\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/user/Documents/Training-2021/react_js/todo/src/components/Form.jsx"],"names":["React","useEffect","v4","uuidV4","Form","input","setInput","todos","setTodos","editTodos","setEditTodos","onInputChange","event","target","value","updateTodo","title","id","completed","newTodo","map","todo","onFormSubmit","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;;AACA,MAAMC,IAAI,GAAG,CAAC;AACZC,EAAAA,KADY;AAEZC,EAAAA,QAFY;AAGZC,EAAAA,KAHY;AAIZC,EAAAA,QAJY;AAKZC,EAAAA,SALY;AAMZC,EAAAA;AANY,CAAD,KAOP;AACJ,QAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/BN,IAAAA,QAAQ,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,EAAR,EAAYC,SAAZ,KAA0B;AAC3C,UAAMC,OAAO,GAAGZ,KAAK,CAACa,GAAN,CAAWC,IAAD,IACxBA,IAAI,CAACJ,EAAL,KAAYA,EAAZ,GAAiB;AAAED,MAAAA,KAAF;AAASC,MAAAA,EAAT;AAAaC,MAAAA;AAAb,KAAjB,GAA4CG,IAD9B,CAAhB;AAGAb,IAAAA,QAAQ,CAACW,OAAD,CAAR;AACAT,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,GAND;;AAQA,QAAMY,YAAY,GAAIV,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACW,cAAN;;AACA,QAAI,CAACd,SAAL,EAAgB;AACdD,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW;AAAEU,QAAAA,EAAE,EAAEd,MAAM,EAAZ;AAAgBa,QAAAA,KAAK,EAAEX,KAAvB;AAA8Ba,QAAAA,SAAS,EAAE;AAAzC,OAAX,CAAD,CAAR;AACAZ,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,KAHD,MAGO;AACLS,MAAAA,UAAU,CAACV,KAAD,EAAQI,SAAS,CAACQ,EAAlB,EAAsBR,SAAS,CAACS,SAAhC,CAAV;AACD;AACF,GARD;;AAUA,sBACE;AAAM,IAAA,QAAQ,EAAEI,YAAhB;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,YAFZ;AAGE,MAAA,WAAW,EAAC,kBAHd;AAIE,MAAA,KAAK,EAAEjB,KAJT;AAKE,MAAA,QAAQ,MALV;AAME,MAAA,QAAQ,EAAEM;AANZ;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,IAAI,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA7CD;;KAAMP,I;AA+CN,eAAeA,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nconst Form = ({\r\n  input,\r\n  setInput,\r\n  todos,\r\n  setTodos,\r\n  editTodos,\r\n  setEditTodos,\r\n}) => {\r\n  const onInputChange = (event) => {\r\n    setInput(event.target.value);\r\n  };\r\n\r\n  const updateTodo = (title, id, completed) => {\r\n    const newTodo = todos.map((todo) =>\r\n      todo.id === id ? { title, id, completed } : todo\r\n    );\r\n    setTodos(newTodo);\r\n    setEditTodos(\"\");\r\n  };\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (!editTodos) {\r\n      setTodos([...todos, { id: uuidV4(), title: input, completed: false }]);\r\n      setInput(\"\");\r\n    } else {\r\n      updateTodo(input, editTodos.id, editTodos.completed);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onFormSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"task-input\"\r\n        placeholder=\"Enter a ToDo....\"\r\n        value={input}\r\n        required\r\n        onChange={onInputChange}\r\n      />\r\n      <button className=\"button-add\" type=\"submit\">\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}